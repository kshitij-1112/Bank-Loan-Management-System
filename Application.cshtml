@model BankLoanProject.Models.LoanApplicationViewModel
@{
    var role = Context.Session.GetString("Role");
}

<link rel="stylesheet" href="~/css/loan-application.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Dashboard Header -->
<div class="dashboard-header">
    <h1>
        <i class="fas fa-file-invoice-dollar me-3"></i>
        Loan Application Portal
    </h1>
    <p>Apply for a new loan or manage your existing applications</p>
</div>

<!-- Apply Button - Centered -->
@if (role == "Customer")
{
    <div class="text-center">
        <button type="button" class="btn btn-apply" id="applyForLoanButton" data-bs-toggle="modal" data-bs-target="#loanApplicationModal">
            <i class="fas fa-plus-circle me-2"></i>Apply for Loan
        </button>
    </div>
}

<!-- Refresh Button -->
<div class="refresh-container">
    <button type="button" class="btn-refresh" onclick="refreshData()">
        <i class="fas fa-sync-alt"></i>
        Refresh
    </button>
</div>

<!-- Table Controls -->
<div class="table-controls">
    <div class="rows-control">
        <label for="rowsPerPage">
            <i class="fas fa-list-ol"></i>
            Rows per page:
        </label>
        <select id="rowsPerPage" class="form-select" onchange="changeRowsPerPage()">
            <option value="5" selected>5</option>
            <option value="10">10</option>
            <option value="15">15</option>
            <option value="20">20</option>
        </select>
    </div>

    <div class="controls-right">
        <div class="input-group search-input-group">
            <span class="input-group-text">
                <i class="fas fa-search"></i>
            </span>
            <input type="text" class="form-control" id="searchInput" placeholder="Search applications..." oninput="searchApplications()">
        </div>
    </div>
</div>

<!-- Table -->
<div class="table-container">
    <div class="table-wrapper">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    @if (role == "Admin")
                    {
                        <th scope="col"><i class="fas fa-hashtag me-1"></i>Customer ID</th>
                        <th scope="col"><i class="fas fa-user me-1"></i>Name</th>
                    }
                    <th scope="col"><i class="fas fa-tag me-1"></i>Product Type</th>
                    <th scope="col"><i class="fas fa-box me-1"></i>Product Name</th>
                    <th scope="col"><i class="fas fa-percentage me-1"></i>Rate</th>
                    <th scope="col"><i class="fas fa-hourglass-half me-1"></i>Tenure</th>
                    <th scope="col"><i class="fas fa-rupee-sign me-1"></i>Amount</th>
                    <th scope="col"><i class="fas fa-calendar-alt me-1"></i>Date</th>
                    <th scope="col"><i class="fas fa-info-circle me-1"></i>Status</th>
                    @if (role == "Admin")
                    {
                        <th scope="col"><i class="fas fa-cogs me-1"></i>Actions</th>
                    }
                </tr>
            </thead>
            <tbody id="table-body">
                @if (ViewBag.ApplicationList != null)
                {
                    @foreach (var app in ViewBag.ApplicationList)
                    {
                        <tr class="application-row" data-application-id="@app.ApplicationId">
                            @if(role == "Admin")
                            {
                                <td><strong>@app.CustomerId</strong></td>
                                <td>@app.Name</td>
                            }
                            <td>
                                @{
                                    string productIcon = "";
                                    switch(app.ProductType?.ToLower())
                                    {
                                        case "vehicle":
                                        case "vehicle loan":
                                            productIcon = "fas fa-car";
                                            break;
                                        case "home":
                                        case "home loan":
                                            productIcon = "fas fa-home";
                                            break;
                                        case "personal":
                                        case "personal loan":
                                            productIcon = "fas fa-user";
                                            break;
                                        default:
                                            productIcon = "fas fa-tag";
                                            break;
                                    }
                                }
                                <i class="@productIcon product-icon"></i>@app.ProductType
                            </td>
                            <td>@app.ProductName</td>
                            <td>@app.InterestRate?.ToString()%</td>
                            <td>@app.LoanTenure months</td>
                            <td><span class="amount">â‚¹@app.LoanAmount?.ToString("N0")</span></td>
                            <td>@app.ApplicationDate?.ToString("dd-MM-yyyy")</td>
                            <td>
                                @{
                                    string statusClass = "";
                                    string statusIcon = "";
                                    switch(app.ApprovalStatus?.ToLower())
                                    {
                                        case "approved":
                                            statusClass = "status-approved";
                                            statusIcon = "fas fa-check-circle";
                                            break;
                                        case "pending":
                                            statusClass = "status-pending";
                                            statusIcon = "fas fa-clock";
                                            break;
                                        case "rejected":
                                            statusClass = "status-rejected";
                                            statusIcon = "fas fa-times-circle";
                                            break;
                                        default:
                                            statusClass = "status-pending";
                                            statusIcon = "fas fa-clock";
                                            break;
                                    }
                                }
                                <span class="status-badge @statusClass" data-status="@app.ApprovalStatus">
                                    <i class="@statusIcon me-1"></i>@app.ApprovalStatus
                                </span>
                            </td>
                            @if(role == "Admin")
                            {
                                <td>
                                    <div class="d-flex gap-1">
                                        <button type="button" class="btn btn-action btn-process" data-id="@app.CustomerId" data-bs-toggle="modal" data-bs-target="#processApplicationModal">
                                            <i class="fas fa-cogs me-1"></i>Process
                                        </button>
                                    </div>
                                </td>
                            }
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="10" class="text-center">No applications found.</td></tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination Section -->
    <div class="pagination-section">
        <div class="pagination-info" id="paginationInfo">
            <!-- Pagination info will be generated by JavaScript -->
        </div>
        <nav aria-label="Application pagination">
            <ul class="pagination" id="paginationContainer">
                <!-- Pagination buttons will be generated by JavaScript -->
            </ul>
        </nav>
    </div>
</div>

<!-- Loan Application Modal - Large Size -->
<div class="modal fade" id="loanApplicationModal" tabindex="-1" aria-labelledby="loanApplicationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <form id="loanApplicationForm" method="post" asp-action="ApplyForLoan" asp-controller="LoanApplication">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="loanModalLabel">
                        <i class="fas fa-file-signature me-2"></i>Loan Application Form
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="productTypeDropdown">
                                    <i class="fas fa-tag me-2"></i>Product Type
                                </label>
                                <select class="form-control" id="productTypeDropdown" name="ProductType">
                                    <option value="">-- Select Product Type --</option>
                                    @foreach (var type in ViewBag.ProductTypes as List<string>)
                                    {
                                        <option value="@type">@type</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="LoanProductId">
                                    <i class="fas fa-box me-2"></i>Product Name
                                </label>
                                <select asp-for="LoanProductId" class="form-control" id="productNameDropdown">
                                    <option value="">-- Select Product Name --</option>
                                </select>
                                <span asp-validation-for="LoanProductId" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="LoanAmount">
                                    <i class="fas fa-rupee-sign me-2"></i>Loan Amount
                                </label>
                                <input asp-for="LoanAmount" type="number" class="form-control" placeholder="Enter loan amount" />
                                <span asp-validation-for="LoanAmount" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="LoanTenure">
                                    <i class="fas fa-hourglass-half me-2"></i>Tenure (in months)
                                </label>
                                <input asp-for="LoanTenure" type="number" class="form-control" placeholder="Enter loan tenure" />
                                <span asp-validation-for="LoanTenure" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success" name="submitType" value="Submit">
                        <i class="fas fa-check-circle me-2"></i>Submit Application
                    </button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Cancel
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Process Application Modal - Large Size -->
<div class="modal fade" id="processApplicationModal" tabindex="-1" aria-labelledby="processApplicationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="processApplicationModalLabel">
                    <i class="fas fa-file-signature me-2"></i>Loan Application Details
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <table class="table table-borderless mb-3">
                            <tbody>
                                <tr>
                                    <th scope="row" class="w-50">
                                        <i class="fas fa-hashtag me-2"></i>Customer ID:
                                    </th>
                                    <td id="processCustId"></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="w-50">
                                        <i class="fas fa-user me-2"></i>Name:
                                    </th>
                                    <td id="processName"></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="w-50">
                                        <i class="fas fa-percentage me-2"></i>Interest Rate:
                                    </th>
                                    <td id="processIR"></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="w-50">
                                        <i class="fas fa-hourglass-half me-2"></i>Tenure:
                                    </th>
                                    <td id="processTenure"></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="w-50">
                                        <i class="fas fa-tag me-2"></i>Product Type:
                                    </th>
                                    <td id="processProduct"></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <table class="table table-borderless mb-3">
                            <tbody>
                                <tr>
                                    <th scope="row" class="w-50">
                                        <i class="fas fa-box me-2"></i>Product Name:
                                    </th>
                                    <td id="processProductName"></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="w-50">
                                        <i class="fas fa-rupee-sign me-2"></i>Loan Amount:
                                    </th>
                                    <td id="processLoanAmount"></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="w-50">
                                        <i class="fas fa-calendar-alt me-2"></i>Application Date:
                                    </th>
                                    <td id="processApplicationDate"></td>
                                </tr>
                                <tr>
                                    <th scope="row" class="w-50">
                                        <i class="fas fa-info-circle me-2"></i>Current Status:
                                    </th>
                                    <td id="processStatusText"></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            <label for="processStatus" class="form-label">
                                <i class="fas fa-edit me-2"></i>Update Status
                            </label>
                            <select id="processStatus" class="form-select">
                                <option value="Approved">Approve</option>
                                <option value="Pending">Pending</option>
                                <option value="Rejected">Reject</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Close
                </button>
                <button type="button" class="btn btn-primary" id="saveProcessStatusBtn">
                    <i class="fas fa-save me-2"></i>Save Changes
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Global variables for pagination and search
        let currentPage = 1;
        let rowsPerPage = 5;
        let allRows = [];
        let filteredRows = [];

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            initializeTable();
        });

        function initializeTable() {
            allRows = Array.from(document.querySelectorAll('.application-row'));
            filteredRows = [...allRows];
            updateTable();
        }

        function applyFilters() {
            let rows = [...allRows];
            
            // Apply search filter
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            if (searchTerm !== '') {
                rows = rows.filter(row => {
                    const text = row.textContent.toLowerCase();
                    return text.includes(searchTerm);
                });
            }
            
            filteredRows = rows;
        }

        function updateTable() {
            // Hide all rows first
            allRows.forEach(row => row.style.display = 'none');
            
            // Calculate pagination
            const totalRows = filteredRows.length;
            const totalPages = Math.ceil(totalRows / rowsPerPage) || 1;
            const startIndex = (currentPage - 1) * rowsPerPage;
            const endIndex = Math.min(startIndex + rowsPerPage, totalRows);
            
            // Show current page rows
            for (let i = startIndex; i < endIndex; i++) {
                if (filteredRows[i]) {
                    filteredRows[i].style.display = '';
                }
            }
            
            // Update pagination controls
            updatePagination(totalPages, totalRows, startIndex, endIndex);
        }

        function updatePagination(totalPages, totalRows, startIndex, endIndex) {
            const paginationContainer = document.getElementById('paginationContainer');
            const paginationInfo = document.getElementById('paginationInfo');
            
            // Clear existing pagination
            paginationContainer.innerHTML = '';
            
            if (totalPages <= 1) {
                const singleBtn = createBootstrapPaginationButton('1', 1, false, true);
                paginationContainer.appendChild(singleBtn);
            } else {
                // First page button
                const firstBtn = createBootstrapPaginationButton('Â«', 1, currentPage === 1);
                paginationContainer.appendChild(firstBtn);
                
                // Previous page button
                const prevBtn = createBootstrapPaginationButton('â€¹', currentPage - 1, currentPage === 1);
                paginationContainer.appendChild(prevBtn);
                
                // Page number buttons
                const maxVisiblePages = 5;
                let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
                let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
                
                if (endPage - startPage + 1 < maxVisiblePages) {
                    startPage = Math.max(1, endPage - maxVisiblePages + 1);
                }
                
                for (let i = startPage; i <= endPage; i++) {
                    const pageBtn = createBootstrapPaginationButton(i, i, false, i === currentPage);
                    paginationContainer.appendChild(pageBtn);
                }
                
                // Next page button
                const nextBtn = createBootstrapPaginationButton('â€º', currentPage + 1, currentPage === totalPages);
                paginationContainer.appendChild(nextBtn);
                
                // Last page button
                const lastBtn = createBootstrapPaginationButton('Â»', totalPages, currentPage === totalPages);
                paginationContainer.appendChild(lastBtn);
            }
            
            // Update pagination info
            if (totalRows > 0) {
                paginationInfo.innerHTML = `
                    <i class="fas fa-info-circle"></i>
                    Showing ${startIndex + 1} to ${endIndex} of ${totalRows} entries
                `;
            } else {
                paginationInfo.innerHTML = `
                    <i class="fas fa-info-circle"></i>
                    No matching records found
                `;
            }
        }

        function createBootstrapPaginationButton(text, page, disabled, active = false) {
            const li = document.createElement('li');
            li.className = `page-item ${active ? 'active' : ''} ${disabled ? 'disabled' : ''}`;
            
            const button = document.createElement('a');
            button.className = 'page-link';
            button.innerHTML = text;
            button.href = '#';
            
            if (!disabled) {
                button.onclick = (e) => {
                    e.preventDefault();
                    goToPage(page);
                };
            }
            
            li.appendChild(button);
            return li;
        }

        function goToPage(page) {
            currentPage = page;
            updateTable();
        }

        function changeRowsPerPage() {
            rowsPerPage = parseInt(document.getElementById('rowsPerPage').value);
            currentPage = 1;
            updateTable();
        }

        function searchApplications() {
            currentPage = 1;
            applyFilters();
            updateTable();
        }

        function refreshData() {
            const refreshBtn = document.querySelector('.btn-refresh i');
            refreshBtn.classList.add('fa-spin');
            
            // Clear search
            document.getElementById('searchInput').value = '';
            
            // Reset to original data
            currentPage = 1;
            applyFilters();
            
            setTimeout(() => {
                updateTable();
                refreshBtn.classList.remove('fa-spin');
            }, 800);
        }

        // Product type dropdown change handler
        $('#productTypeDropdown').change(function () {
            var selectedType = $(this).val();
            var productNameDropdown = $('#productNameDropdown');

            productNameDropdown.empty().append('<option value="">-- Loading... --</option>');

            if (selectedType) {
                $.getJSON('/LoanApplication/GetProductNamesByType', { productType: selectedType }, function (data) {
                    productNameDropdown.empty().append('<option value="">-- Select Product Name --</option>');
                    $.each(data, function (i, item) {
                        productNameDropdown.append($('<option>', {
                            value: item.value,
                            text: item.text
                        }));
                    });
                });
            } else {
                productNameDropdown.empty().append('<option value="">-- Select Product Name --</option>');
            }
        });

        // Process button click handler
        $(document).on('click', '.btn-process', function () {
            const customerId = $(this).data('id');

            $.ajax({
                url: '/LoanApplication/GetApplicationDetails',
                type: 'GET',
                data: { customerId: customerId },
                success: function (data) {
                    if (data) {
                        $('#processCustId').text(data.customerId);
                        $('#processName').text(data.name);
                        $('#processIR').text(data.interestRate + '%');
                        $('#processTenure').text(data.loanTenure + ' months');
                        $('#processProduct').text(data.productType);
                        $('#processProductName').text(data.productName);
                        $('#processLoanAmount').text('â‚¹' + parseFloat(data.loanAmount).toLocaleString('en-IN'));
                        $('#processApplicationDate').text(data.applicationDate);
                        $('#processStatusText').text(data.approvalStatus);
                        $('#processStatus').val(data.approvalStatus);
                        $('#saveProcessStatusBtn').data('application-id', data.applicationId);
                        $('#saveProcessStatusBtn').data('customer-id', data.customerId);
                    }
                }
            });
        });

        // Save process status button click handler
        $('#saveProcessStatusBtn').on('click', function () {
            const applicationId = $(this).data('application-id');
            const customerId = $(this).data('customer-id');
            const newStatus = $('#processStatus').val();

            const submitBtn = $(this);
            const originalText = submitBtn.html();
            submitBtn.html('<i class="fas fa-spinner fa-spin me-2"></i>Saving...');
            submitBtn.prop('disabled', true);

            $.ajax({
                url: '/LoanApplication/UpdateStatus',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ applicationId: applicationId, status: newStatus }),
                success: function (response) {
                    // Update the status in the table without page reload
                    updateStatusInTable(customerId, newStatus);
                    
                    // Close modal
                    $('#processApplicationModal').modal('hide');
                    
                    // Show success message
                    alert(response.message || 'Status updated successfully!');
                },
                error: function() {
                    alert('Error updating status. Please try again.');
                },
                complete: function() {
                    submitBtn.html(originalText);
                    submitBtn.prop('disabled', false);
                }
            });
        });

        // Function to update status in table without page reload
        function updateStatusInTable(customerId, newStatus) {
            const row = document.querySelector(`[data-id="${customerId}"]`).closest('tr');
            if (row) {
                const statusCell = row.querySelector('.status-badge');
                if (statusCell) {
                    // Remove old status classes
                    statusCell.classList.remove('status-approved', 'status-pending', 'status-rejected');
                    
                    // Add new status class and update content
                    let statusClass = '';
                    let statusIcon = '';
                    
                    switch(newStatus.toLowerCase()) {
                        case 'approved':
                            statusClass = 'status-approved';
                            statusIcon = 'fas fa-check-circle';
                            break;
                        case 'pending':
                            statusClass = 'status-pending';
                            statusIcon = 'fas fa-clock';
                            break;
                        case 'rejected':
                            statusClass = 'status-rejected';
                            statusIcon = 'fas fa-times-circle';
                            break;
                    }
                    
                    statusCell.classList.add(statusClass);
                    statusCell.innerHTML = `<i class="${statusIcon} me-1"></i>${newStatus}`;
                    statusCell.setAttribute('data-status', newStatus);
                }
            }
        }
    </script>
}
